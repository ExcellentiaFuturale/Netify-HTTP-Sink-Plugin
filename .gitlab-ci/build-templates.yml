# Debian build
#-------------

.debian_build:
  stage: build
  image: $OS_IMAGE
  script:
    # Build environment
    - apt update
    - env DEBIAN_FRONTEND=noninteractive apt install -y rsync debhelper autoconf automake bc build-essential libtool wget pkg-config git
    - env DEBIAN_FRONTEND=noninteractive apt install -y libpcap-dev libtcmalloc-minimal4
    - wget --no-check-certificate https://download.netify.ai/netify/$OS_NAME/$OS_VERSION-devel/$OS_ARCH_PATH/netifyd_${NETIFY_MINVER}_${OS_ARCH}.deb
    - wget --no-check-certificate https://download.netify.ai/netify/$OS_NAME/$OS_VERSION-devel/$OS_ARCH_PATH/netifyd-dev_${NETIFY_MINVER}_${OS_ARCH}.deb
    - apt install -y ./netifyd_${NETIFY_MINVER}_${OS_ARCH}.deb ./netifyd-dev_${NETIFY_MINVER}_${OS_ARCH}.deb
    # Build packages
    - ./autogen.sh
    - ./configure --prefix=/usr --includedir=\${prefix}/include --mandir=\${prefix}/share/man --sysconfdir=/etc --localstatedir=/var
    - make -C deploy/debian
    - cp -av deploy/debian .
    - dpkg-buildpackage -b
    # Copy packages to mirror
    - mkdir -p builds/$CI_PROJECT_NAME/$OS_NAME/$OS_VERSION/$OS_ARCH_PATH
    - mv -v ../*.deb builds/$CI_PROJECT_NAME/$OS_NAME/$OS_VERSION/$OS_ARCH_PATH
    - mv -v ../*.changes builds/$CI_PROJECT_NAME/$OS_NAME/$OS_VERSION/$OS_ARCH_PATH
    - mv -v ../*.buildinfo builds/$CI_PROJECT_NAME/$OS_NAME/$OS_VERSION/$OS_ARCH_PATH
    # Push build to master node
    - rsync -rtv builds/* master-mirror.netify-backend.gcp::netify/builds/${CI_COMMIT_REF_NAME}/
  artifacts:
    when: always
    paths:
    - builds
    expire_in: 1 day

# RPM build
#----------

.rpmos_build:
  stage: build
  image: $RPMOS_IMAGE
  script:
    # Build environment
    - yum -y install make rpm-build which expect yum-utils sudo autoconf gcc gcc-c++ automake libtool rsync bc git wget
    - yum -y install $RPMOS_REPOS libpcap-devel
    - wget --no-check-certificate https://download.netify.ai/netify/$RPMOS_OS/$RPMOS_VERSION/devel/$RPMOS_ARCH/netifyd-${NETIFY_MINVER}.os${RPMOS_VERSION}.x86_64.rpm
    - wget --no-check-certificate https://download.netify.ai/netify/$RPMOS_OS/$RPMOS_VERSION/devel/$RPMOS_ARCH/netifyd-devel-${NETIFY_MINVER}.os${RPMOS_VERSION}.x86_64.rpm
    - yum -y localinstall $RPMOS_REPOS netifyd*.rpm
    # Build packages
    - ./autogen.sh
    - ./configure --prefix=/usr --includedir=\${prefix}/include --mandir=\${prefix}/share/man --sysconfdir=/etc --localstatedir=/var
    - make -C deploy/rpm
    - grep ^Version deploy/rpm/netify-sink-post.spec | sed 's/.*[[:space:]]//' > /tmp/version
    - tar --exclude=.git --transform "s,^,netify-sink-post-`cat /tmp/version`/," -czf netify-sink-post-`cat /tmp/version`.tar.gz *
    - rpmbuild -bs deploy/rpm/netify-sink-post.spec --define "_sourcedir $PWD" --define "_srcrpmdir $PWD"
    - rpmbuild --rebuild *.src.rpm
    # Copy artifacts (packages) to mirror
    - mkdir -p builds/$CI_PROJECT_NAME/$RPMOS_OS/$RPMOS_VERSION/$RPMOS_ARCH
    - mv -v ~/rpmbuild/RPMS/$RPMOS_ARCH/*.rpm builds/$CI_PROJECT_NAME/$RPMOS_OS/$RPMOS_VERSION/$RPMOS_ARCH/
    # Push build to master node
    - rsync -rtv builds/* master-mirror.netify-backend.gcp::netify/builds/${CI_COMMIT_REF_NAME}/
  artifacts:
    when: always
    paths:
    - builds
    expire_in: 1 day
